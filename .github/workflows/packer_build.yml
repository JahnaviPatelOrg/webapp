name: packer_build

on:
  pull_request:
    branches:
      - main
#    types:
#      - closed

#permissions:
#    id-token: write
#    contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}


    strategy:
      matrix:
        python-version: [ 3.11 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Start mysql
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};" -u ${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }}


      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./webapp


      - name: Run Migrations and Tests
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DATABASE_NAME: ${{ secrets.DB_NAME }}
          DATABASE_USER: ${{ secrets.DB_USER }}
          DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DB_HOST }}
          DATABASE_PORT: ${{ secrets.DB_PORT }}
        run: |
          python manage.py makemigrations
          python manage.py migrate
          python manage.py test
        working-directory: ./webapp

      - name: zip files
        run: zip -r webapp.zip . -x "*.git*" -x ".github/*" -x "README.md"

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: webapp-artifact
          path: ./webapp.zip

  packer_buid:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AMI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AMI_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 'gcloud Cloud SDK auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.9
        with:
          name: webapp-artifact
          path: ./

      - name: Initialize Packer
        run: packer init setup.pkr.hcl
        working-directory: ./webapp/packer_setup

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1


      - name: Build Packer image
        env:
            Source_AMI: ${{ secrets.AWS_SOURCE_AMI }}
            AWS_Account_IDs: ${{ secrets.AWS_DEMO_ACCOUNT_ID }}
            AWS_DEMO_ACCOUNT_ID: ${{ secrets.AWS_DEMO_ACCOUNT_ID }}
            GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
            GOOGLE_PROJECT_ID_DEMO: ${{ secrets.GOOGLE_PROJECT_ID_DEMO }}
        run: |
          IMAGE_NAME="webapp-image-20250315165154"
          
          echo "Copying image to demo project"
          echo "gcloud compute images create $IMAGE_NAME --source-image=projects/${GOOGLE_PROJECT_ID}/global/images/${IMAGE_NAME} --source-image-project=${GOOGLE_PROJECT_ID} --project=${GOOGLE_PROJECT_ID_DEMO} --family=ubuntu-2404-lts-amd64 --description='Copied image from DEV'"
          gcloud compute images add-iam-policy-binding webapp-image-20250315165154 \            
          --project=dev-webapp-451921 \           
          --member='serviceAccount:467790541090@cloudservices.gserviceaccount.com' \            
          --role='roles/compute.imageUser'

          gcloud compute images create webapp-image-20250315165154  \
          --source-image-project=dev-webapp-451921 \
          --source-image=projects/dev-webapp-451921/global/images/webapp-image-20250315151817 \
          --project=plated-mechanic-453318-j5 \
          --family=ubuntu-2404-lts-amd64 \
          --description="Copied image from DEV"
          
        working-directory: ./webapp/packer_setup
